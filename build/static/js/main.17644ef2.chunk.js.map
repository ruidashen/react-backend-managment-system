{"version":3,"sources":["redux/action-types.js","api/ajax.js","api/index.js","utils/storageUtils.js","redux/actions.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","utils/formatDateUtils.js","components/link-button/index.jsx","components/header/index.jsx","pages/home/home.jsx","pages/category/addForm.jsx","pages/category/updateForm.jsx","pages/category/category.jsx","utils/constants.js","pages/product/home.jsx","pages/product/detail.jsx","pages/product/pictures-wall.jsx","pages/product/richTextEditor.jsx","pages/product/addupdate.jsx","pages/product/product.jsx","pages/role/addForm.jsx","pages/role/permissionForm.jsx","pages/role/role.jsx","pages/user/createUserForm.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/pie.jsx","pages/charts/line.jsx","pages/admin/admin.jsx","App.js","redux/reducer.js","redux/store.js","index.js","assests/images/icon.png"],"names":["SET_HEAD_TITLE","RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","reqCategories","parentId","reqCategory","categoryId","reqUpdateCategory","categoryName","reqAddCategory","reqProducts","pageNum","pageSize","reqSearchProducts","keywords","searchType","reqWeather","zip","obj","temp","main","name","err","reqUpdateStatus","productId","status","reqAddOrUpdateProduct","product","_id","reqDeleteImg","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqGetUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","store","set","remove","logout","storageUtils","showErrorMsg","errorMsg","receiveUser","Login","Pwdvalidator","rule","value","callback","length","test","handleSubmit","event","preventDefault","props","form","validateFields","values","a","console","log","login","this","to","getFieldDecorator","className","src","logo","alt","onSubmit","Item","rules","required","whitespace","max","min","pattern","prefix","style","color","placeholder","validator","htmlType","Component","WrapFormLogin","create","connect","state","dispatch","result","msg","menuList","title","key","icon","isPublic","children","SubMenu","LeftNav","getMenuNodes","path","location","pathname","map","item","userHasAuth","find","childItem","openKey","indexOf","setHeadTitle","onClick","menus","child","menuNodes","fontSize","selectedKeys","defaultOpenKeys","mode","theme","withRouter","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","LinkButton","confirm","Header","currentTime","now","cityName","getTime","intervalId","setInterval","setState","getWeather","toFixed","logOut","e","onOk","clearInterval","headerTitle","Home","Option","AddForm","setForm","categories","label","initialValue","c","UpdateForm","Category","subCategories","isLoading","parentName","showStatus","initColumns","columns","dataIndex","width","render","category","showUpdate","getSubCategories","getCategories","showCategories","handleCancel","resetFields","showAdd","addCategory","getFieldsValue","updateCategory","getFieldValue","marginRight","extra","bordered","dataSource","rowKey","pagination","defaultPageSize","showQuickJumper","showSizeChanger","loading","visible","onCancel","PAGE_SIZE","BASE_IMG_URL","ProductHome","products","total","price","newStatus","id","updateStatus","history","push","success","getProducts","list","listWithKey","listItem","index","onChange","margin","target","viewBox","current","ProductDetail","cName1","cName2","pCategoryId","all","results","desc","detail","imgTags","imgs","img","goBack","dangerouslySetInnerHTML","__html","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","getImgs","fileList","previewVisible","handlePreview","preview","originFileObj","previewImage","handleChange","uid","uploadButton","accept","action","listType","onPreview","footer","RichTextEditor","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","onEditorStateChange","editorState","getDetail","content","getCurrentContent","draftToHtml","convertToRaw","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","initOptions","isLeaf","isUpdate","subCategory","childOptions","option","loadData","selectedOptions","targetOption","submit","categoryIds","pw","ed","validatePrice","React","createRef","labelCol","span","wrapperCol","autosize","minRows","maxRows","addonAfter","ref","Product","exact","component","ProductUpdate","PermissionForm","getTreeNodes","reduce","pre","onCheck","checkedKeys","getMenus","treeNodes","nextProps","tree","disabled","checkable","defaultExpandAll","onSelect","treeData","PureComponent","Role","roles","showAddForm","showPermissionForm","initColumn","formatDate","onRow","addRole","getRoles","updateRole","permissionFormRef","auth_name","role_id","info","componentDidMount","rowSelection","selectedRowKeys","CreateUserForm","phone","email","User","users","isModalOn","initRoleNames","roleNames","initColums","deleteUser","getUsers","addOrUpdateUser","showCreate","BarChart","getOption","legend","tooltip","dataset","source","xAxis","yAxis","series","update","height","PieChart","trigger","formatter","radius","avoidLabelOverlap","show","position","emphasis","fontWeight","labelLine","LineChart","Footer","Sider","Content","Admin","backgroundColor","textAlign","App","initHeaderTitle","initUser","combineReducers","createStore","reducer","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.17644ef2.chunk.js","sourcesContent":["export const SET_HEAD_TITLE = \"set_head_title\";\r\nexport const RECEIVE_USER = \"receive_user\";\r\nexport const SHOW_ERROR_MSG = \"show_error_msg\";\r\nexport const RESET_USER = \"reset_user\";\r\n","/* Encapsulate axios */\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    if (type === \"GET\") {\r\n      // GET Request\r\n      promise = axios.get(url, {\r\n        params: data\r\n      });\r\n    } else {\r\n      // POST Reqeust\r\n      promise = axios.post(url, data);\r\n    }\r\n    promise\r\n      .then(response => {\r\n        resolve(response.data);\r\n      })\r\n      .catch(error => {\r\n        message.error(\"Request error: \" + error);\r\n      });\r\n  });\r\n}\r\n","import ajax from \"./ajax\";\r\nimport axios from \"axios\";\r\nimport {\r\n  message\r\n} from \"antd\";\r\n// const BASE = \"http://localhost:5000\";\r\nconst BASE = \"\";\r\n// Login\r\nexport const reqLogin = (username, password) =>\r\n  ajax(BASE + \"/login\", {\r\n    username,\r\n    password\r\n  }, \"POST\");\r\n\r\n// Get category lists\r\nexport const reqCategories = (parentId) =>\r\n  ajax(BASE + \"/manage/category/list\", {\r\n    parentId\r\n  });\r\n\r\n// Get a category based on id\r\nexport const reqCategory = (categoryId) =>\r\n  ajax(BASE + \"/manage/category/info\", {\r\n    categoryId\r\n  });\r\n\r\n// Update a category\r\nexport const reqUpdateCategory = ({\r\n    categoryId,\r\n    categoryName\r\n  }) =>\r\n  ajax(BASE + \"/manage/category/update\", {\r\n    categoryId,\r\n    categoryName\r\n  }, \"POST\");\r\n\r\n// Add a category\r\nexport const reqAddCategory = ({\r\n    parentId,\r\n    categoryName\r\n  }) =>\r\n  ajax(BASE + \"/manage/category/add\", {\r\n    parentId,\r\n    categoryName\r\n  }, \"POST\");\r\n\r\n// Request product list\r\nexport const reqProducts = (pageNum, pageSize) =>\r\n  ajax(BASE + \"/manage/product/list\", {\r\n    pageNum,\r\n    pageSize\r\n  });\r\n\r\n// Search product based on name or description\r\nexport const reqSearchProducts = ({\r\n    pageNum,\r\n    pageSize,\r\n    keywords,\r\n    searchType,\r\n  }) =>\r\n  ajax(BASE + \"/manage/product/search\", {\r\n    pageNum,\r\n    pageSize,\r\n    [searchType]: keywords,\r\n  });\r\n\r\n// Getting weather info\r\nexport const reqWeather = (zip) => {\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.openweathermap.org/data/2.5/weather?zip=${zip}&appid=1e8c28669e9ce829c28e99ac6cae3c0e&units=metric`;\r\n    const req = axios(url);\r\n    req\r\n      .then((data) => {\r\n        const obj = {\r\n          temp: data.data.main.temp,\r\n          name: data.data.name,\r\n        };\r\n        resolve(obj);\r\n      })\r\n      .catch((err) => {\r\n        message.error(\r\n          \"Retreiving weather info failed, please check your settings.\"\r\n        );\r\n      });\r\n  });\r\n};\r\n\r\n// Update product status \"on sale\" / \"N/A\"\r\nexport const reqUpdateStatus = (productId, status) =>\r\n  ajax(BASE + \"/manage/product/updateStatus\", {\r\n    productId,\r\n    status\r\n  }, \"POST\");\r\n// Add product\r\nexport const reqAddOrUpdateProduct = (product) =>\r\n  ajax(\r\n    BASE + \"/manage/product/\" + (product._id ? \"update\" : \"add\"),\r\n    product,\r\n    \"POST\"\r\n  );\r\n\r\n// Delete image\r\nexport const reqDeleteImg = (name) =>\r\n  ajax(BASE + \"/manage/img/delete\", {\r\n    name\r\n  }, \"POST\");\r\n\r\n// Get all roles\r\nexport const reqRoles = () => ajax(BASE + \"/manage/role/list\");\r\n\r\n// Add role\r\nexport const reqAddRole = (name) =>\r\n  ajax(BASE + \"/manage/role/add\", {\r\n    roleName: name\r\n  }, \"POST\");\r\n\r\n// Update role\r\nexport const reqUpdateRole = (role) =>\r\n  ajax(BASE + \"/manage/role/update\", role, \"POST\");\r\n\r\n// Get user listing\r\nexport const reqGetUsers = () => ajax(BASE + \"/manage/user/list\");\r\n\r\n// Delete an user\r\nexport const reqDeleteUser = (userId) => ajax(BASE + \"/manage/user/delete\", {\r\n  userId\r\n}, 'POST');\r\n\r\n// Create or update an user in database\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + \"/manage/user/\" + (user._id ? 'update' : 'add'), user, 'POST');","import store from \"store\";\r\n\r\nconst USER_KEY = \"user_key\";\r\nexport default {\r\n  saveUser(user) {\r\n    store.set(USER_KEY, user);\r\n  },\r\n\r\n  getUser() {\r\n    return store.get(USER_KEY);\r\n  },\r\n\r\n  removeUser() {\r\n    store.remove(USER_KEY);\r\n  }\r\n};\r\n","import {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER,\r\n} from \"./action-types\";\r\nimport { reqLogin } from \"../api/index\";\r\nimport storageUtils from \"../utils/storageUtils\";\r\nexport const setHeadTitle = (title) => ({ type: SET_HEAD_TITLE, title });\r\n\r\nexport const login = (username, password) => {\r\n  return async (dispatch) => {\r\n    const result = await reqLogin(username, password);\r\n    if (result.status === 0) {\r\n      const user = result.data;\r\n      storageUtils.saveUser(user);\r\n      dispatch(receiveUser(user));\r\n    } else {\r\n      const errorMsg = result.msg;\r\n      dispatch(showErrorMsg(errorMsg));\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  storageUtils.removeUser();\r\n  return { type: RESET_USER };\r\n};\r\nexport const showErrorMsg = (errorMsg) => ({ type: SHOW_ERROR_MSG, errorMsg });\r\nexport const receiveUser = (user) => ({ type: RECEIVE_USER, user });\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./login.less\";\r\nimport logo from \"../../assests/images/icon.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/actions\";\r\n/*\r\n    Login page \r\n */\r\nclass Login extends Component {\r\n  Pwdvalidator = (rule, value, callback) => {\r\n    if (!value) {\r\n      callback(\"Please input your password!\");\r\n    } else if (value.length > 12) {\r\n      callback(\"Password must be less than 12 characters!\");\r\n    } else if (value.length < 4) {\r\n      callback(\"Password must be at least 4 characters long!\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback(\"Password can only contain numbers,letters and underscore.\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        const { username, password } = values;\r\n        this.props.login(username, password);\r\n      } else {\r\n        console.log(err);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const user = this.props.user;\r\n    if (user && user._id) {\r\n      return <Redirect to=\"/\"></Redirect>;\r\n    }\r\n\r\n    const errorMsg = this.props.user.errorMsg;\r\n    const form = this.props.form;\r\n    const { getFieldDecorator } = form;\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>React Content Management System</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <div>{errorMsg}</div>\r\n          <h2>Login</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Form.Item>\r\n              {getFieldDecorator(\"username\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"Please input your username!\",\r\n                  },\r\n                  {\r\n                    max: 12,\r\n                    message: \"Username must be less than 12 characters!\",\r\n                  },\r\n                  {\r\n                    min: 4,\r\n                    message: \"Username must be at least 4 characters long!\",\r\n                  },\r\n                  {\r\n                    pattern: /^[a-zA-Z0-9_]+$/,\r\n                    message:\r\n                      \"Username can only contain numbers,letters and underscore.\",\r\n                  },\r\n                ],\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"Username\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [{ validator: this.Pwdvalidator }],\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrapFormLogin = Form.create()(Login);\r\n\r\nexport default connect((state) => ({ user: state.user }), { login })(\r\n  WrapFormLogin\r\n);\r\n","const menuList = [{\r\n    title: \"Home\",\r\n    key: \"/home\", // Path\r\n    icon: \"home\",\r\n    isPublic: true\r\n  },\r\n  {\r\n    title: \"Products\",\r\n    key: \"/products\",\r\n    icon: \"appstore\",\r\n    children: [{\r\n        title: \"Category\",\r\n        key: \"/category\",\r\n        icon: \"bars\"\r\n      },\r\n      {\r\n        title: \"Product\",\r\n        key: \"/product\",\r\n        icon: \"tool\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"User\",\r\n    key: \"/user\",\r\n    icon: \"user\"\r\n  },\r\n  {\r\n    title: \"Role\",\r\n    key: \"/role\",\r\n    icon: \"safety\"\r\n  },\r\n  {\r\n    title: \"Charts\",\r\n    key: \"/charts\",\r\n    icon: \"area-chart\",\r\n    children: [{\r\n        title: \"Bar Chart\",\r\n        key: \"/charts/bar\",\r\n        icon: \"bar-chart\"\r\n      },\r\n      {\r\n        title: \"Line Chart\",\r\n        key: \"/charts/line\",\r\n        icon: \"line-chart\"\r\n      },\r\n      {\r\n        title: \"Pie Chart\",\r\n        key: \"/charts/pie\",\r\n        icon: \"pie-chart\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default menuList;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setHeadTitle } from \"../../redux/actions\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./index.less\";\r\nimport menuList from \"../../config/menuConfig\";\r\n\r\nconst { SubMenu } = Menu;\r\n/*\r\nleft-nav component\r\n*/\r\n\r\nclass LeftNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.menuNodes = this.getMenuNodes(menuList);\r\n  }\r\n  getMenuNodes = (menuList) => {\r\n    const path = this.props.location.pathname;\r\n    return menuList.map((item) => {\r\n      // Check if user has permission to see this path\r\n      if (this.userHasAuth(item)) {\r\n        if (item.children) {\r\n          // Find an item which has the key that matches current path name.\r\n          const cItem = item.children.find(\r\n            (childItem) => childItem.key === path\r\n          );\r\n          if (cItem) {\r\n            this.openKey = item.key;\r\n          }\r\n          return (\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <Icon type={item.icon}></Icon>\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          );\r\n        } else {\r\n          if (item.key === path || path.indexOf(item.key) === 0) {\r\n            this.props.setHeadTitle(item.title);\r\n          }\r\n          return (\r\n            <Menu.Item key={item.key}>\r\n              <Link\r\n                to={item.key}\r\n                onClick={() => this.props.setHeadTitle(item.title)}\r\n              ></Link>\r\n              <Icon type={item.icon}></Icon>\r\n              <span>{item.title}</span>\r\n            </Menu.Item>\r\n          );\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n  };\r\n\r\n  userHasAuth = (item) => {\r\n    const { key, isPublic } = item;\r\n    const user = this.props.user;\r\n    const menus = user.role.menus;\r\n    const username = user.username;\r\n\r\n    /**\r\n     * 1. If user is admin\r\n     * 2. If current item is public\r\n     * 3. If current user has permission to this path, look for the key in user's menu\r\n     * 4. If current user has permission to this path's children paths.\r\n     */\r\n\r\n    if (username === \"admin\" || isPublic || menus.indexOf(key) >= 0) {\r\n      return true;\r\n    } else if (item.children) {\r\n      // condition 4\r\n      return !!item.children.find((child) => menus.indexOf(child.key) >= 0); // convert to boolean\r\n    }\r\n\r\n    return false;\r\n  };\r\n  render() {\r\n    let path = this.props.location.pathname;\r\n    if (path.indexOf(\"/product\") === 0) {\r\n      path = \"/product\";\r\n    }\r\n    return (\r\n      <div to=\"/\" className=\"left-nav\">\r\n        <Link to=\"/\" className=\"left-nav-header\">\r\n          <Icon type=\"user\" className=\"icon\" />\r\n          <h1 style={{ fontSize: \"1em\" }}>React Back End Management System</h1>\r\n        </Link>\r\n\r\n        <div>\r\n          <Menu\r\n            selectedKeys={[path]}\r\n            defaultOpenKeys={[this.openKey]}\r\n            mode=\"inline\"\r\n            theme=\"dark\"\r\n          >\r\n            {this.menuNodes}\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({ user: state.user }), { setHeadTitle })(\r\n  withRouter(LeftNav)\r\n);\r\n","export default function formateDate(time) {\r\n  if (!time) return \"\";\r\n  let date = new Date(time);\r\n  return (\r\n    date.getFullYear() +\r\n    \"-\" +\r\n    (date.getMonth() + 1) +\r\n    \"-\" +\r\n    date.getDate() +\r\n    \" \" +\r\n    date.getHours() +\r\n    \":\" +\r\n    date.getMinutes() +\r\n    \":\" +\r\n    date.getSeconds()\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./index.less\";\r\n\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Icon, Modal } from \"antd\";\r\nimport { reqWeather } from \"../../api/\";\r\nimport formateDate from \"../../utils/formatDateUtils\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport \"./index.less\";\r\nimport { logout } from \"../../redux/actions\";\r\nconst { confirm } = Modal;\r\n/*\r\nleft-nav component\r\n*/\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    currentTime: formateDate(Date.now()),\r\n    temp: \"location unknown\",\r\n    cityName: \"\",\r\n  };\r\n  getTime = () => {\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now());\r\n      this.setState({ currentTime });\r\n    }, 1000);\r\n  };\r\n  getWeather = () => {\r\n    const zip = \"94087,us\";\r\n    reqWeather(zip).then((data) => {\r\n      this.setState({\r\n        temp: data.temp.toFixed(0),\r\n        cityName: data.name,\r\n      });\r\n    });\r\n  };\r\n\r\n  logOut = (e) => {\r\n    e.preventDefault();\r\n    confirm({\r\n      title: \"Are you sure to log out?\",\r\n      onOk: () => {\r\n        this.props.logout();\r\n      },\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getTime();\r\n    this.getWeather();\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n  render() {\r\n    const title = this.props.headerTitle;\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>Welcome, {this.props.user.username}</span>\r\n          <LinkButton onClick={this.logOut}>Log out</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{this.state.currentTime}</span>\r\n            <Icon type=\"cloud\" className=\"weather-icon\" />\r\n            <span className=\"city-name\">Cupertino</span>\r\n            <span>{this.state.temp} &deg;C</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({ headerTitle: state.headerTitle, user: state.user }),\r\n  { logout }\r\n)(withRouter(Header));\r\n","import React, { Component } from \"react\";\r\nimport \"./home.less\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return <div className=\"home\">Welcome to React backend management system</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Select, Input } from \"antd\";\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n// Form component used to add category\r\n\r\nclass AddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.setForm(this.props.form);\r\n  }\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired, // Primary category array\r\n    parentId: PropTypes.string.isRequired\r\n  };\r\n  render() {\r\n    const { categories, parentId } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form>\r\n        <Item label=\"Category:\">\r\n          {getFieldDecorator(\"parentId\", {\r\n            initialValue: parentId\r\n          })(\r\n            <Select>\r\n              <Option value=\"0\">Primary Category</Option>\r\n              {categories.map(c => (\r\n                <Option value={c._id}>{c.name}</Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n        <Item label=\"Category Name:\">\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: \"\",\r\n            rules: [{ required: true, message: \"Category name is required!\" }]\r\n          })(<Input placeholder=\"Please enter name for the category\"></Input>)}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input } from \"antd\";\r\nconst Item = Form.Item;\r\n// Form component used to add category\r\n\r\nclass UpdateForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.setForm(this.props.form);\r\n  }\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { categoryName } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: categoryName,\r\n            rules: [{ required: true, message: \"Category name is required!\" }]\r\n          })(<Input placeholder=\"Please enter name for the category\"></Input>)}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Card, Icon, Table, message, Modal } from \"antd\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport AddForm from \"./addForm\";\r\nimport UpdateForm from \"./updateForm\";\r\nimport {\r\n  reqUpdateCategory,\r\n  reqAddCategory,\r\n  reqCategories\r\n} from \"../../api/index\";\r\nexport default class Category extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initColumns();\r\n  }\r\n  state = {\r\n    categories: [], // Level one category list\r\n    subCategories: [],\r\n    isLoading: false,\r\n    parentId: \"0\",\r\n    parentName: \"\",\r\n    showStatus: 0 // 1 -> display add category modal, 2 -> display update category modal, 0 -> none\r\n  };\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"Category Name\",\r\n        dataIndex: \"name\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        width: 300,\r\n        render: category => (\r\n          <span>\r\n            <LinkButton\r\n              onClick={() => {\r\n                this.showUpdate(category);\r\n              }}\r\n            >\r\n              Modify Category\r\n            </LinkButton>\r\n            {this.state.parentId === \"0\" ? (\r\n              <LinkButton\r\n                onClick={() => {\r\n                  this.getSubCategories(category);\r\n                }}\r\n              >\r\n                View Subcategory\r\n              </LinkButton>\r\n            ) : null}\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n  };\r\n\r\n  getCategories = async parentId => {\r\n    parentId = parentId || this.state.parentId;\r\n    this.setState({ isLoading: true });\r\n\r\n    const result = await reqCategories(parentId);\r\n    if (result.status === 0) {\r\n      const categories = result.data;\r\n      if (parentId === \"0\") {\r\n        this.setState({ categories, isLoading: false });\r\n      } else {\r\n        this.setState({ subCategories: categories, isLoading: false });\r\n      }\r\n    } else {\r\n      message.error(\"Retreive category lists failed\");\r\n    }\r\n  };\r\n\r\n  getSubCategories = async category => {\r\n    this.setState({ parentId: category._id, parentName: category.name }, () => {\r\n      this.getCategories();\r\n    });\r\n  };\r\n\r\n  // Show level one category listing\r\n  showCategories = () => {\r\n    this.setState({\r\n      parentName: \"\",\r\n      parentId: \"0\",\r\n      subCategories: []\r\n    });\r\n  };\r\n\r\n  // When user clicks cancel on modal\r\n  handleCancel = () => {\r\n    // Reset input data\r\n    this.form.resetFields();\r\n\r\n    this.setState({ showStatus: 0 });\r\n  };\r\n\r\n  // Display add category modal\r\n  showAdd = () => {\r\n    this.setState({ showStatus: 1 });\r\n  };\r\n\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // Hide modal\r\n        this.setState({ showStatus: 0 });\r\n\r\n        // Getting data ready\r\n        const { categoryName, parentId } = this.form.getFieldsValue();\r\n\r\n        this.form.resetFields();\r\n\r\n        const result = await reqAddCategory({ parentId, categoryName });\r\n\r\n        if (result.status === 0) {\r\n          if (parentId === this.state.parentId) {\r\n            // Refresh page\r\n            this.getCategories();\r\n          } else if (parentId === \"0\") {\r\n            // Adding primary category on secondary category page\r\n            this.getCategories(\"0\");\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // Display update category modal\r\n  showUpdate = category => {\r\n    this.category = category;\r\n    this.setState({ showStatus: 2 });\r\n  };\r\n  updateCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // Hide modal\r\n        this.setState({ showStatus: 0 });\r\n\r\n        // Getting data ready\r\n        const categoryId = this.category._id;\r\n        const categoryName = this.form.getFieldValue(\"categoryName\");\r\n\r\n        // Reset input data\r\n        this.form.resetFields();\r\n\r\n        // Request update category\r\n        const result = await reqUpdateCategory({ categoryId, categoryName });\r\n        if (result.status === 0) {\r\n          // Refresh page\r\n          this.getCategories();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCategories();\r\n  }\r\n  render() {\r\n    const {\r\n      categories,\r\n      parentId,\r\n      parentName,\r\n      subCategories,\r\n      isLoading,\r\n      showStatus\r\n    } = this.state;\r\n    const category = this.category || {};\r\n    const title =\r\n      parentId === \"0\" ? (\r\n        \"Category List\"\r\n      ) : (\r\n        <span>\r\n          <LinkButton onClick={this.showCategories}>Category List</LinkButton>\r\n          <Icon type=\"arrow-right\" style={{ marginRight: 5 }}></Icon>\r\n          <span>{parentName}</span>\r\n        </span>\r\n      );\r\n    const extra = (\r\n      <Button type=\"primary\" onClick={this.showAdd}>\r\n        <Icon type=\"plus\"></Icon>\r\n        Add\r\n      </Button>\r\n    );\r\n\r\n    const data = this.state.categories;\r\n    return (\r\n      <div>\r\n        <Card title={title} extra={extra}>\r\n          <Table\r\n            bordered\r\n            columns={this.columns}\r\n            dataSource={parentId === \"0\" ? data : subCategories}\r\n            rowKey=\"_id\"\r\n            pagination={{\r\n              defaultPageSize: 5,\r\n              showQuickJumper: true,\r\n              showSizeChanger: true\r\n            }}\r\n            loading={isLoading}\r\n          />\r\n          <Modal\r\n            title=\"Add Category\"\r\n            visible={showStatus === 1}\r\n            onOk={this.addCategory}\r\n            onCancel={this.handleCancel}\r\n          >\r\n            <AddForm\r\n              categories={categories}\r\n              parentId={parentId}\r\n              setForm={form => {\r\n                this.form = form;\r\n              }}\r\n            ></AddForm>\r\n          </Modal>\r\n          <Modal\r\n            title=\"Update Category\"\r\n            visible={showStatus === 2}\r\n            onOk={this.updateCategory}\r\n            onCancel={this.handleCancel}\r\n          >\r\n            <UpdateForm\r\n              categoryName={category.name}\r\n              setForm={form => {\r\n                this.form = form;\r\n              }}\r\n            ></UpdateForm>\r\n          </Modal>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Default number of displayed product\r\nexport const PAGE_SIZE = 5;\r\n\r\n// Default ADDRESS for local pictures\r\nexport const BASE_IMG_URL = \"/upload/\";\r\n","import React, { Component } from \"react\";\r\nimport { Card, Select, Input, Button, Icon, Table, message } from \"antd\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { reqProducts, reqSearchProducts, reqUpdateStatus } from \"../../api/\";\r\nimport { PAGE_SIZE } from \"../../utils/constants\";\r\n\r\nconst Option = Select.Option;\r\nexport default class ProductHome extends Component {\r\n  state = {\r\n    products: [], // Array containing all products\r\n    total: 0, // Total number of products\r\n    loading: false,\r\n    keywords: \"\", // Search keywords\r\n    searchType: \"productName\", // Name or Description\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.initColumns();\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"Description\",\r\n        dataIndex: \"desc\",\r\n      },\r\n      {\r\n        title: \"Price\",\r\n        dataIndex: \"price\",\r\n        render: (price) => {\r\n          return \"$\" + price;\r\n        },\r\n      },\r\n      {\r\n        width: 150,\r\n\r\n        title: \"Status\",\r\n        // dataIndex: \"status\",\r\n        render: (product) => {\r\n          const { status, _id } = product;\r\n          const newStatus = status === 1 ? 2 : 1;\r\n          return (\r\n            <div id=\"status_cell\">\r\n              <span>\r\n                <span>{status === 1 ? \"On Sale\" : \"Discontinued\"}</span>\r\n                <Button\r\n                  id=\"modify_status_button\"\r\n                  type=\"primary\"\r\n                  onClick={() => this.updateStatus(_id, newStatus)}\r\n                >\r\n                  {status === 1 ? \"Remove from store\" : \"Launch\"}\r\n                </Button>\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        width: 100,\r\n        title: \"Action\",\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              <LinkButton\r\n                onClick={() =>\r\n                  this.props.history.push(\"/product/detail\", { product })\r\n                }\r\n              >\r\n                Details\r\n              </LinkButton>\r\n              <LinkButton\r\n                onClick={() =>\r\n                  this.props.history.push(\"/product/addupdate\", product)\r\n                }\r\n              >\r\n                Modify\r\n              </LinkButton>\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  };\r\n\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status);\r\n    if (result.status === 0) {\r\n      message.success(\"Product Updated\");\r\n      this.getProducts(this.pageNum);\r\n    }\r\n  };\r\n\r\n  getProducts = async (pageNum) => {\r\n    this.setState({ loading: true });\r\n    this.pageNum = pageNum; // Make page number visible to other functions\r\n    const { keywords, searchType } = this.state;\r\n    let result;\r\n    if (keywords) {\r\n      result = await reqSearchProducts({\r\n        pageNum,\r\n        pageSize: PAGE_SIZE,\r\n        keywords,\r\n        searchType,\r\n      });\r\n    } else {\r\n      result = await reqProducts(pageNum, PAGE_SIZE);\r\n    }\r\n    this.setState({ loading: false });\r\n    if (result.status === 0) {\r\n      const { total, list } = result.data;\r\n      const listWithKey = list.map((listItem, index) => {\r\n        return { ...listItem, key: index };\r\n      });\r\n      this.setState({ total, products: listWithKey });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getProducts(1);\r\n  }\r\n  render() {\r\n    const { products, total, loading, searchType, keywords } = this.state;\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value={searchType}\r\n          onChange={(value) => this.setState({ searchType: value })}\r\n          style={{ width: \"165px\" }}\r\n        >\r\n          <Option value=\"productName\">Search by name</Option>\r\n          <Option value=\"productDesc\">Search by description</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder=\"keyword\"\r\n          style={{ width: 150, margin: \"0 15px\" }}\r\n          value={keywords}\r\n          onChange={(event) => {\r\n            this.setState({ keywords: event.target.value });\r\n          }}\r\n        ></Input>\r\n        <Button type=\"primary\" onClick={() => this.getProducts(1)}>\r\n          Search\r\n        </Button>\r\n      </span>\r\n    );\r\n\r\n    const extra = (\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => this.props.history.push(\"/product/addupdate\")}\r\n      >\r\n        <Icon type=\"plus\" viewBox=\"0 0 1024 1024\"></Icon>\r\n        Add Product\r\n      </Button>\r\n    );\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            total,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts,\r\n            loading: { loading },\r\n            current: this.pageNum,\r\n          }}\r\n        ></Table>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Icon, List } from \"antd\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { reqCategory } from \"../../api\";\r\nimport { BASE_IMG_URL } from \"../../utils/constants\";\r\nconst Item = List.Item;\r\n\r\nexport default class ProductDetail extends Component {\r\n  state = {\r\n    cName1: \"\", // Lv1 category name\r\n    cName2: \"\", // Lv2 category name\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // Get current product category id\r\n\r\n    const { pCategoryId, categoryId } = this.props.location.state.product;\r\n\r\n    if (pCategoryId === \"0\") {\r\n      // product is in Lv1 category\r\n      const result = await reqCategory(categoryId);\r\n      const cName1 = result.data.name;\r\n      this.setState({ cName1 });\r\n    } else {\r\n      // request Lv1 category and Lv2 category names at the same time\r\n      const results = await Promise.all([\r\n        reqCategory(pCategoryId),\r\n        reqCategory(categoryId),\r\n      ]);\r\n      const cName1 = results[0].data.name;\r\n      const cName2 = results[1].data.name;\r\n\r\n      this.setState({\r\n        cName1,\r\n        cName2,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    // Get product from props\r\n    const {\r\n      name,\r\n      desc,\r\n      price,\r\n      detail,\r\n      imgs,\r\n    } = this.props.location.state.product;\r\n\r\n    let imgTags = imgs.map((img) => {\r\n      console.log(BASE_IMG_URL + img);\r\n      return (\r\n        <span key={img}>\r\n          <img className=\"product-img\" src={BASE_IMG_URL + img} alt=\"img\" />\r\n        </span>\r\n      );\r\n    });\r\n    const { cName1, cName2 } = this.state;\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <Icon\r\n            type=\"arrow-left\"\r\n            style={{ marginRight: 10, fontSize: 20 }}\r\n            onClick={() => this.props.history.goBack()}\r\n          ></Icon>\r\n        </LinkButton>\r\n        <span>Products</span>\r\n      </span>\r\n    );\r\n    return (\r\n      <Card title={title} className=\"product-detail\">\r\n        <List>\r\n          <Item>\r\n            <span className=\"left\">Product Name:</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">Product Description:</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">Product Price:</span>\r\n            <span>${price}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">Category:</span>\r\n            <span>\r\n              {cName1} --> {cName2}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">Product Images:</span>\r\n            {imgTags}\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">Product Detail:</span>\r\n            <span dangerouslySetInnerHTML={{ __html: detail }}></span>\r\n          </Item>\r\n        </List>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Upload, Modal, message } from \"antd\";\r\nimport { reqDeleteImg } from \"../../api\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BASE_IMG_URL } from \"../../utils/constants\";\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log();\r\n    let fileList = [];\r\n    const { imgs } = this.props;\r\n    console.log(imgs);\r\n    if (imgs && imgs.length > 0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index,\r\n        name: img,\r\n        status: \"done\",\r\n        url: BASE_IMG_URL + img,\r\n      }));\r\n    }\r\n    this.state = {\r\n      previewVisible: false,\r\n      previewImage: \"\",\r\n      fileList,\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array,\r\n  };\r\n  getImgs = () => {\r\n    return this.state.fileList.map((file) => file.name);\r\n  };\r\n\r\n  // Hide modal\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = async ({ file, fileList }) => {\r\n    // console.log(\"handleChange()\", file, fileList);\r\n\r\n    if (file.status === \"done\") {\r\n      const result = file.response;\r\n      if (result.status === 0) {\r\n        message.success(\"Picture Uploaded!\");\r\n        const { name, url } = result.data;\r\n        file = fileList[fileList.length - 1];\r\n        file.name = name;\r\n        file.url = url;\r\n      } else {\r\n        message.error(\"Picture Upload Failed!\");\r\n      }\r\n    } else if (file.status === \"removed\") {\r\n      const result = await reqDeleteImg(file.name);\r\n      if (result.status === 0) {\r\n        message.success(\"Picture Deleted\");\r\n      } else {\r\n        message.error(\"Picture Deletion Failed!\");\r\n      }\r\n    }\r\n    this.setState({ fileList });\r\n  };\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          name=\"image\"\r\n          accept=\"image/*\"\r\n          action=\"/manage/img/upload\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport PropTypes from \"prop-types\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nexport default class RichTextEditor extends Component {\r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const html = this.props.detail;\r\n    if (html) {\r\n      const contentBlock = htmlToDraft(html);\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlock.contentBlocks\r\n      );\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.state = {\r\n        editorState\r\n      };\r\n    } else {\r\n      this.state = EditorState.createEmpty();\r\n    }\r\n  }\r\n\r\n  uploadImageCallBack = file => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"/manage/img/upload\");\r\n      const data = new FormData();\r\n      data.append(\"image\", file);\r\n      xhr.send(data);\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        const url = response.data.url;\r\n        resolve({ data: { link: url } });\r\n      });\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    });\r\n  };\r\n  onEditorStateChange = editorState => {\r\n    this.setState({\r\n      editorState\r\n    });\r\n  };\r\n\r\n  getDetail = () => {\r\n    try {\r\n      let content = this.state.editorState.getCurrentContent();\r\n      if (content) {\r\n        return draftToHtml(convertToRaw(content));\r\n      }\r\n    } catch (e) {\r\n      return \"\";\r\n    }\r\n  };\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{\r\n          border: \"1px solid black\",\r\n          minHeight: 200,\r\n          paddingLeft: 10\r\n        }}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: {\r\n            uploadCallback: this.uploadImageCallBack,\r\n            alt: { present: true, mandatory: true },\r\n            previewImage: true\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Cascader,\r\n  Button,\r\n  Icon,\r\n  message\r\n} from \"antd\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { reqCategories, reqAddOrUpdateProduct } from \"../../api\";\r\nimport PicturesWall from \"./pictures-wall\";\r\nimport RichTextEditor from \"./richTextEditor\";\r\nconst { Item } = Form;\r\nconst { TextArea } = Input;\r\n\r\nclass ProductAddUpdate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.pw = React.createRef();\r\n    this.ed = React.createRef();\r\n    const product = this.props.location.state;\r\n    // Flag for add / modify\r\n    this.isUpdate = !!product;\r\n    this.product = product || {};\r\n  }\r\n\r\n  state = {\r\n    options: []\r\n  };\r\n\r\n  initOptions = async categories => {\r\n    // Initialize options array based on categories\r\n    const options = categories.map(category => ({\r\n      value: category._id,\r\n      label: category.name,\r\n      isLeaf: false\r\n    }));\r\n\r\n    // If user requested a modify\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId } = product;\r\n    if (isUpdate && pCategoryId !== \"0\") {\r\n      const subCategory = await this.getCategories(pCategoryId);\r\n      // Generate lv2 category list\r\n      const childOptions = subCategory.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }));\r\n      const targetOption = options.find(option => option.value === pCategoryId);\r\n      targetOption.children = childOptions;\r\n    }\r\n    // Update options in state\r\n    this.setState({\r\n      options\r\n    });\r\n  };\r\n\r\n  // Used to load next level category\r\n  loadData = async selectedOptions => {\r\n    const targetOption = selectedOptions[0];\r\n    targetOption.loading = true;\r\n\r\n    const subCategories = await this.getCategories(targetOption.value);\r\n    targetOption.loading = false;\r\n    if (subCategories && subCategories.length > 0) {\r\n      const childOptions = subCategories.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }));\r\n      targetOption.children = childOptions;\r\n    } else {\r\n      targetOption.isLeaf = true;\r\n    }\r\n\r\n    this.setState({\r\n      options: [...this.state.options]\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    this.props.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n        // collect data\r\n        const { name, desc, price, categoryIds } = values;\r\n        let pCategoryId, categoryId;\r\n        if (categoryIds.length === 1) {\r\n          pCategoryId = \"0\";\r\n          categoryId = categoryIds[0];\r\n        } else {\r\n          pCategoryId = categoryIds[0];\r\n          categoryId = categoryIds[1];\r\n        }\r\n        const imgs = this.pw.current.getImgs();\r\n        const detail = this.ed.current.getDetail();\r\n        const product = {\r\n          name,\r\n          desc,\r\n          price,\r\n          pCategoryId,\r\n          categoryId,\r\n          imgs,\r\n          detail\r\n        };\r\n\r\n        if (this.isUpdate) {\r\n          product._id = this.product._id;\r\n        }\r\n        const result = await reqAddOrUpdateProduct(product);\r\n\r\n        if (result.status === 0) {\r\n          message.success(\r\n            `${this.isUpdate ? \"Product Update \" : \"Product Add \"} Succeeded!`\r\n          );\r\n          this.props.history.goBack();\r\n        } else {\r\n          message.error(\r\n            `${this.isUpdate ? \"Product Update \" : \"Product Add \"} Failed!`\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  validatePrice = (rule, value, callback) => {\r\n    if (value * 1 <= 0) {\r\n      callback(\"Price must be greater than 0!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  getCategories = async parentId => {\r\n    const result = await reqCategories(parentId);\r\n    if (result.status === 0) {\r\n      const categories = result.data;\r\n\r\n      if (parentId === \"0\") {\r\n        this.initOptions(categories);\r\n      } else {\r\n        return categories;\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCategories(\"0\");\r\n  }\r\n\r\n  render() {\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId, categoryId, imgs, detail } = product;\r\n    const categoryIds = [];\r\n\r\n    if (isUpdate) {\r\n      if (pCategoryId === \"0\") {\r\n        categoryIds.push(categoryId);\r\n      } else {\r\n        categoryIds.push(pCategoryId);\r\n        categoryIds.push(categoryId);\r\n      }\r\n    }\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <Icon type=\"arrow-left\" style={{ fontSize: 20 }}></Icon>\r\n        </LinkButton>\r\n        <span>{isUpdate ? \"Modify Product\" : \"Add Product\"}</span>\r\n      </span>\r\n    );\r\n\r\n    // Item layout style\r\n    const formItemLayout = {\r\n      labelCol: { span: 3 },\r\n      wrapperCol: { span: 8 }\r\n    };\r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"Product Name\">\r\n            {getFieldDecorator(\"name\", {\r\n              initialValue: this.product.name,\r\n              rules: [{ required: true, message: \"Product name required!\" }]\r\n            })(<Input placeholder=\"Please Enter Product Name\"></Input>)}\r\n          </Item>\r\n          <Item label=\"Product Description:\">\r\n            {getFieldDecorator(\"desc\", {\r\n              initialValue: this.product.desc,\r\n              rules: [\r\n                { required: true, message: \"Product description required!\" }\r\n              ]\r\n            })(\r\n              <TextArea\r\n                autosize={{ minRows: 2, maxRows: 6 }}\r\n                placeholder=\"Please Enter Product Description!\"\r\n              ></TextArea>\r\n            )}\r\n          </Item>\r\n          <Item label=\"Product Price\">\r\n            {getFieldDecorator(\"price\", {\r\n              initialValue: this.product.price,\r\n              rules: [\r\n                { required: true, message: \"Price is required!\" },\r\n                { validator: this.validatePrice }\r\n              ]\r\n            })(\r\n              <Input\r\n                addonAfter=\"USD\"\r\n                type=\"number\"\r\n                placeholder=\"Please Enter Product Price\"\r\n              ></Input>\r\n            )}\r\n          </Item>\r\n          <Item label=\"Product Category\">\r\n            {getFieldDecorator(\"categoryIds\", {\r\n              initialValue: categoryIds,\r\n              rules: [{ required: true, message: \"Category is required!\" }]\r\n            })(\r\n              <Cascader\r\n                placeholder=\"Please select product category\"\r\n                options={this.state.options}\r\n                loadData={this.loadData}\r\n              ></Cascader>\r\n            )}\r\n          </Item>\r\n          <Item label=\"Product Pictures\">\r\n            <PicturesWall ref={this.pw} imgs={imgs}></PicturesWall>\r\n          </Item>\r\n          <Item\r\n            label=\"Product Detail\"\r\n            labelCol={{ span: 3 }}\r\n            wrapperCol={{ span: 20 }}\r\n          >\r\n            <RichTextEditor ref={this.ed} detail={detail}></RichTextEditor>\r\n          </Item>\r\n          <Item>\r\n            <Button type=\"primary\" onClick={this.submit}>\r\n              Submit\r\n            </Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate);\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport ProductHome from \"./home\";\r\nimport ProductDetail from \"./detail\";\r\nimport ProductUpdate from \"./addupdate\";\r\nimport \"./product.less\";\r\n\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact component={ProductHome} path=\"/product\"></Route>\r\n        <Route component={ProductDetail} path=\"/product/detail\"></Route>\r\n        <Route component={ProductUpdate} path=\"/product/addupdate\"></Route>\r\n        <Redirect to=\"/product\"></Redirect>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Select, Input } from \"antd\";\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n// Form component used to add category\r\n\r\nclass AddForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form labelCol={{ span: 5 }} wrapperCol={{ span: 15 }}>\r\n        <Item label=\"Role Name:\">\r\n          {getFieldDecorator(\"roleName\", {\r\n            initialValue: \"\",\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Role name is required!\"\r\n              }\r\n            ]\r\n          })(<Input placeholder=\"Please enter name for the role\"></Input>)}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm);\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input, Tree } from \"antd\";\r\nimport menuList from \"../../config/menuConfig\";\r\n\r\nconst Item = Form.Item;\r\n// Form component used to add category\r\n\r\nclass PermissionForm extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.treeNodes = this.getTreeNodes(menuList);\r\n\r\n    const { menus } = this.props.role;\r\n    this.state = {\r\n      checkedKeys: menus,\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    role: PropTypes.object,\r\n  };\r\n\r\n  getTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push({\r\n        title: item.title,\r\n        key: item.key,\r\n        children: item.children ? this.getTreeNodes(item.children) : null,\r\n      });\r\n      return pre;\r\n    }, []);\r\n  };\r\n\r\n  onCheck = (checkedKeys) => {\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n  getMenus = () => this.state.checkedKeys;\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const menus = nextProps.role.menus;\r\n    this.setState({\r\n      checkedKeys: menus,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { role } = this.props;\r\n    const { checkedKeys } = this.state;\r\n    const tree = {\r\n      title: \"System Permission\",\r\n      key: \"all\",\r\n      children: this.treeNodes,\r\n    };\r\n    return (\r\n      <Form labelCol={{ span: 5 }} wrapperCol={{ span: 15 }}>\r\n        <Item label=\"Role\">\r\n          <Input value={role.name} disabled></Input>\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          checkedKeys={checkedKeys}\r\n          defaultExpandAll={true}\r\n          onSelect={this.onSelect}\r\n          onCheck={this.onCheck}\r\n          treeData={tree}\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PermissionForm;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Card, Button, Table, message } from \"antd\";\r\nimport { PAGE_SIZE } from \"../../utils/constants\";\r\nimport { reqRoles, reqAddRole, reqUpdateRole } from \"../../api\";\r\nimport AddForm from \"./addForm\";\r\nimport PermissionForm from \"./permissionForm\";\r\nimport formatDate from \"../../utils/formatDateUtils\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/actions\";\r\nclass Role extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initColumn();\r\n    this.permissionFormRef = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    roles: [], // all roles\r\n    role: {}, // role currently selected\r\n    showAddForm: false,\r\n    showPermissionForm: false,\r\n  };\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"Role Name\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"Time Created\",\r\n        dataIndex: \"create_time\",\r\n        render: formatDate,\r\n      },\r\n      {\r\n        title: \"Time Authorized\",\r\n        dataIndex: \"auth_time\",\r\n        render: formatDate,\r\n      },\r\n      {\r\n        title: \"Authorizer\",\r\n        dataIndex: \"auth_name\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: () => {\r\n        this.setState({ role });\r\n      },\r\n    };\r\n  };\r\n  addRole = () => {\r\n    this.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n        this.setState({ showAddForm: false });\r\n        const { roleName } = values;\r\n        const result = await reqAddRole(roleName);\r\n        if (result.status === 0) {\r\n          message.success(\"Role Added!\");\r\n\r\n          const role = result.data;\r\n          this.setState((state) => ({\r\n            roles: [...state.roles, role],\r\n          }));\r\n        } else {\r\n          message.error(\"Request failed! Something was wrong\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles();\r\n    if (result.status === 0) {\r\n      const roles = result.data;\r\n      this.setState({ roles });\r\n    }\r\n  };\r\n\r\n  updateRole = async () => {\r\n    this.setState({ showPermissionForm: false });\r\n    const role = this.state.role;\r\n    const menus = this.permissionFormRef.current.getMenus();\r\n    role.menus = menus;\r\n    const user = this.props.user;\r\n    role.auth_name = user.username;\r\n\r\n    const result = await reqUpdateRole(role);\r\n\r\n    if (result.status === 0) {\r\n      this.getRoles();\r\n      if (role._id === user.role_id) {\r\n        this.props.logout();\r\n        message.info(\"Permission for his role has changed, please login again\");\r\n      } else {\r\n        message.success(\"Role updated!\");\r\n      }\r\n    } else {\r\n      message.error(\"Request failed\");\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getRoles();\r\n  };\r\n\r\n  render() {\r\n    const { roles, role, showAddForm, showPermissionForm } = this.state;\r\n    const title = (\r\n      <span>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.setState({ showAddForm: true })}\r\n        >\r\n          Create Role\r\n        </Button>{\" \"}\r\n        &nbsp; &nbsp;\r\n        <Button\r\n          type=\"primary\"\r\n          disabled={!role._id}\r\n          onClick={() => this.setState({ showPermissionForm: true })}\r\n        >\r\n          Set Role Permissions\r\n        </Button>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          onRow={this.onRow}\r\n          rowSelection={{\r\n            type: \"radio\",\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => {\r\n              this.setState({ role });\r\n            },\r\n          }}\r\n          bordered\r\n          columns={this.columns}\r\n          dataSource={roles}\r\n          rowKey=\"_id\"\r\n          pagination={{\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            showSizeChanger: true,\r\n          }}\r\n        />\r\n\r\n        <Modal\r\n          title=\"Add Role\"\r\n          visible={showAddForm}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.form.resetFields();\r\n            this.setState({ showAddForm: false });\r\n          }}\r\n        >\r\n          <AddForm\r\n            setForm={(form) => {\r\n              this.form = form;\r\n            }}\r\n          ></AddForm>\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"Set role permissions\"\r\n          visible={showPermissionForm}\r\n          onOk={this.updateRole}\r\n          onCancel={() => this.setState({ showPermissionForm: false })}\r\n        >\r\n          <PermissionForm\r\n            role={role}\r\n            ref={this.permissionFormRef}\r\n          ></PermissionForm>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({ user: state.user }), { logout })(Role);\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Select, Input } from \"antd\";\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n\r\n// Form component used to create user\r\nclass CreateUserForm extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired,\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { roles } = this.props;\r\n    const user = this.props.user || {};\r\n    return (\r\n      <Form labelCol={{ span: 6 }} wrapperCol={{ span: 15 }}>\r\n        <Item label=\"User Name:\">\r\n          {getFieldDecorator(\"username\", {\r\n            initialValue: user.username,\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"User name is required!\",\r\n              },\r\n            ],\r\n          })(<Input placeholder=\"Please enter user name\"></Input>)}\r\n        </Item>\r\n        {user._id ? null : (\r\n          <Item label=\"Password:\">\r\n            {getFieldDecorator('password', {\r\n              initialValue: user.password,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Password is required!\",\r\n                },\r\n              ],\r\n            })(\r\n              <Input placeholder=\"Please enter password\" type=\"password\"></Input>\r\n            )}\r\n          </Item>\r\n        )}\r\n\r\n        <Item label=\"Phone number:\">\r\n          {getFieldDecorator('phone', {\r\n            initialValue: user.phone,\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Phone number is required!\",\r\n              },\r\n            ],\r\n          })(<Input placeholder=\"Please enter phone number\"></Input>)}\r\n        </Item>\r\n        <Item label=\"Email:\">\r\n          {getFieldDecorator('email', {\r\n            initialValue: user.email,\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"email is required!\",\r\n              },\r\n            ],\r\n          })(<Input placeholder=\"Please enter email\"></Input>)}\r\n        </Item>\r\n        <Item label=\"Role:\">\r\n          {getFieldDecorator(\"role_id\", {\r\n            initialValue: user.role_id,\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"role is required!\",\r\n              },\r\n            ],\r\n          })(\r\n            <Select>\r\n              {roles.map(role => <Option key={role._id}>{role.name}</Option>)}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(CreateUserForm);\r\n","import React, { Component } from \"react\";\r\nimport { Table, Card, Button, Modal, message } from \"antd\";\r\nimport formateDate from \"../../utils/formatDateUtils\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { PAGE_SIZE } from \"../../utils/constants\";\r\nimport { reqGetUsers, reqDeleteUser, reqAddOrUpdateUser } from \"../../api\";\r\nimport CreateUserForm from \"./createUserForm\";\r\nconst { confirm } = Modal;\r\n\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initColums();\r\n  }\r\n  state = {\r\n    users: [],\r\n    roles: [],\r\n    isModalOn: false,\r\n  };\r\n\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name;\r\n      return pre;\r\n    }, {});\r\n    this.roleNames = roleNames;\r\n  };\r\n\r\n  initColums = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"User Name\",\r\n        dataIndex: \"username\",\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"email\",\r\n      },\r\n      {\r\n        title: \"Phone\",\r\n        dataIndex: \"phone\",\r\n      },\r\n      {\r\n        title: \"Time Created\",\r\n        dataIndex: \"create_time\",\r\n        render: formateDate,\r\n      },\r\n      {\r\n        title: \"Role\",\r\n        dataIndex: \"role_id\",\r\n        render: (role_id) => this.roleNames[role_id],\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>Modify</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>\r\n              Delete\r\n            </LinkButton>\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n  showUpdate = (user) => {\r\n    this.user = user;\r\n    this.setState({\r\n      isModalOn: true\r\n    })\r\n  }\r\n\r\n  deleteUser = (user) => {\r\n    confirm({\r\n      title: `Do you want to delete ${user.username}?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id);\r\n        if (result.status === 0) {\r\n          message.success(\"User deleted!\");\r\n          this.getUsers();\r\n        }\r\n      },\r\n    });\r\n  };\r\n  getUsers = async () => {\r\n    const result = await reqGetUsers();\r\n    if (result.status === 0) {\r\n      const { users, roles } = result.data;\r\n      this.initRoleNames(roles);\r\n      this.setState({\r\n        users,\r\n        roles,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  addOrUpdateUser = async () => {\r\n    // Collect input\r\n    const user = this.form.getFieldsValue();\r\n    this.form.resetFields();\r\n    if (this.user) {\r\n      user._id = this.user._id;\r\n    }\r\n    // Send create user request\r\n    const result = await reqAddOrUpdateUser(user);\r\n    if (result.status === 0) {\r\n      message.success('User ' + (this.user ? 'modified!' : 'created!'));\r\n      this.getUsers();\r\n      this.setState({ isModalOn: false });\r\n    }\r\n  };\r\n\r\n  showCreate = () => {\r\n    this.user = null;\r\n    this.setState({ isModalOn: true });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getUsers();\r\n  };\r\n  render() {\r\n    const { users, isModalOn, roles } = this.state;\r\n    const user = this.user || {};\r\n    const title = (\r\n      <Button type=\"primary\" onClick={() => this.setState(this.showCreate)}>\r\n        Create User\r\n      </Button>\r\n    );\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          columns={this.columns}\r\n          dataSource={users}\r\n          rowKey=\"_id\"\r\n          pagination={{\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            showSizeChanger: true,\r\n          }}\r\n        />\r\n        <Modal\r\n          title={user._id ? 'Modify User' : 'Create User'}\r\n          visible={isModalOn}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.setState({ isModalOn: false })\r\n            this.form.resetFields();\r\n          }}\r\n        >\r\n          <CreateUserForm setForm={(form) => (this.form = form)} roles={roles} user={this.user} />\r\n        </Modal>\r\n      </Card >\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nexport default class BarChart extends Component {\r\n  getOption = () => {\r\n    return {\r\n      legend: {},\r\n      tooltip: {},\r\n      dataset: {\r\n        source: [\r\n          [\"product\", \"2015\", \"2016\", \"2017\"],\r\n          [\"Matcha Latte\", 43.3, 85.8, 93.7],\r\n          [\"Milk Tea\", 83.1, 73.4, 55.1],\r\n          [\"Cheese Cocoa\", 86.4, 65.2, 82.5],\r\n          [\"Walnut Brownie\", 72.4, 53.9, 39.1],\r\n        ],\r\n      },\r\n      xAxis: { type: \"category\" },\r\n      yAxis: {},\r\n      // Declare several bar series, each will be mapped\r\n      // to a column of dataset.source by default.\r\n      series: [{ type: \"bar\" }, { type: \"bar\" }, { type: \"bar\" }],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type=\"primary\" onClick={this.update} disabled>\r\n            Update\r\n          </Button>\r\n        </Card>\r\n        <Card title=\"Bar Chart\">\r\n          <ReactEcharts\r\n            option={this.getOption()}\r\n            style={{ height: 300 }}\r\n          ></ReactEcharts>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nexport default class PieChart extends Component {\r\n  getOption = () => {\r\n    return {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n        formatter: \"{a} <br/>{b}: {c} ({d}%)\",\r\n      },\r\n\r\n      series: [\r\n        {\r\n          name: \"Source\",\r\n          type: \"pie\",\r\n          radius: [\"50%\", \"70%\"],\r\n          avoidLabelOverlap: false,\r\n          label: {\r\n            show: false,\r\n            position: \"center\",\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: true,\r\n              fontSize: \"30\",\r\n              fontWeight: \"bold\",\r\n            },\r\n          },\r\n          labelLine: {\r\n            show: false,\r\n          },\r\n          data: [\r\n            { value: 335, name: \"Category1\" },\r\n            { value: 310, name: \"Category2\" },\r\n            { value: 234, name: \"Category3\" },\r\n            { value: 135, name: \"Category4\" },\r\n            { value: 1548, name: \"Category5\" },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type=\"primary\" onClick={this.update} disabled>\r\n            Update\r\n          </Button>\r\n        </Card>\r\n        <Card title=\"Pie Chart\">\r\n          <ReactEcharts\r\n            option={this.getOption()}\r\n            style={{ height: 300 }}\r\n          ></ReactEcharts>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nexport default class LineChart extends Component {\r\n  getOption = () => {\r\n    return {\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n      },\r\n      series: [\r\n        {\r\n          data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n          type: \"line\",\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type=\"primary\" onClick={this.update} disabled>\r\n            Update\r\n          </Button>\r\n        </Card>\r\n        <Card title=\"Line Chart\">\r\n          <ReactEcharts\r\n            option={this.getOption()}\r\n            style={{ height: 300 }}\r\n          ></ReactEcharts>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport LeftNav from \"../../components/left-nav\";\r\nimport Header from \"../../components/header\";\r\nimport Home from \"../home/home\";\r\nimport Category from \"../category/category\";\r\nimport Product from \"../product/product\";\r\nimport Role from \"../role/role\";\r\nimport User from \"../user/user\";\r\nimport BarChart from \"../charts/bar\";\r\nimport PieChart from \"../charts/pie\";\r\nimport LineChart from \"../charts/line\";\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\n/*\r\n  admin page \r\n */\r\nclass Admin extends Component {\r\n  render() {\r\n    const user = this.props.user;\r\n    if (!user || !user._id) {\r\n      return <Redirect to=\"/login\"></Redirect>;\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: \"100%\" }}>\r\n        <Sider>\r\n          <LeftNav></LeftNav>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{ margin: \"20px\", backgroundColor: \"#fff\" }}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={Home}></Route>\r\n              <Route path=\"/category\" component={Category}></Route>\r\n              <Route path=\"/product\" component={Product}></Route>\r\n              <Route path=\"/role\" component={Role}></Route>\r\n              <Route path=\"/user\" component={User}></Route>\r\n              <Route path=\"/charts/pie\" component={PieChart}></Route>\r\n              <Route path=\"/charts/line\" component={LineChart}></Route>\r\n              <Route path=\"/charts/bar\" component={BarChart}></Route>\r\n              <Redirect to=\"/home\"></Redirect>\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\", color: \"#cccccc\" }}>\r\n            &copy;Ruida Shen\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state) => ({ user: state.user }), {})(Admin);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/login/login\";\r\nimport Admin from \"./pages/admin/admin\";\r\n\r\n/*\r\nApplication root component\r\n*/\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/\" component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER,\r\n} from \"./action-types\";\r\nimport storageUtils from \"../utils/storageUtils\";\r\n/**\r\n * reducer used to manage header title\r\n */\r\nconst initHeaderTitle = \"Home\";\r\nfunction headerTitle(state = initHeaderTitle, action) {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.title;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/**\r\n * reducer used to manage current logged in user\r\n */\r\nconst initUser = storageUtils.getUser() || {};\r\nfunction user(state = initUser, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      return action.user;\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg;\r\n      return { ...state, errorMsg };\r\n    case RESET_USER:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default combineReducers({\r\n  headerTitle,\r\n  user,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n/**\r\n * Core state object\r\n */\r\n// export default createStore(\r\n//   reducer,\r\n//   composeWithDevTools(applyMiddleware(thunk))\r\n// );\r\nexport default createStore(reducer, applyMiddleware(thunk));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n/*\r\nApplication entry\r\n*/\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App></App>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/icon.124aa9c9.png\";"],"sourceRoot":""}